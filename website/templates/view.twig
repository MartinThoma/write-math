{% extends "base.twig" %}

{% block headerbuttons %}
<div class="btn-toolbar pull-right">
    <img src="../raw-data/{{ raw_data_id }}.svg" style="height:34px; max-width:60px" alt="rendering"/>
    <a href="#answers" class="btn btn-primary" id="resultlink"><span class="glyphicon glyphicon-arrow-down" aria-hidden="true"></span> Answers</a>
</div>
{% endblock %}

{% block header %}
<link rel="stylesheet" href="https://ajax.googleapis.com/ajax/libs/jqueryui/1.11.4/themes/smoothness/jquery-ui.css">
<script type="text/javascript" src="../js/segmentation.js"></script>
<script type="text/javascript" src="../js/accept_partial.js"></script>
<script type="text/javascript" src="../js/unaccept_partial.js"></script>
<script type="text/javascript" src="../js/submit_partial.js"></script>
<script type="text/javascript" src="../js/symbolstrokes.js"></script>
{% endblock %}

{% block content %}
<div role="tabpanel">

  <!-- Nav tabs -->
  <ul class="nav nav-tabs" role="tablist">
    <li role="presentation" class="active"><a href="#home" aria-controls="home" role="tab" data-toggle="tab">Home</a></li>
    <li role="presentation"><a href="#information" aria-controls="information" role="tab" data-toggle="tab">Information</a></li>
    {% if logged_in and account_type != 'IP-User' %}
    <li role="presentation"><a href="#operations_pane" aria-controls="operations_pane" role="tab" data-toggle="tab">Operations</a></li>
    {% endif %}
  </ul>

  <!-- Tab panes -->
  <div class="tab-content">
  <div role="tabpanel" class="tab-pane active" id="home">
<div class="row">
<div class="col-md-6">
<object data="../raw-data/{{ raw_data_id }}.svg{{ force_reload }}"
        type="image/svg+xml"
        id="canvas"
        style="width:400px;height:400px;border:1px solid black;"
></object>
<!-- <img src="../raw-data/{{ raw_data_id }}.svg{{ force_reload }}" alt="recording" style="width:400px;height:400px;border:1px solid black;"/> -->
{% if image_data.user_id == uid or uid == 10 %}
<form class="form-inline" role="form" method="post">
  <input type="hidden" name="raw_id_description" value="{{ raw_data_id }}" />
  <div class="form-group">
    <textarea id="description" name="description" class="form-control" rows="1" cols="50">{{ image_data.description }}</textarea>
  </div>
  <button type="submit" class="btn btn-default">update</button>
</form>

{% else %}
{% if image_data.description|length > 0 %}
<p><b>Description</b>: {{ image_data.description }}</p>
{% endif %}
{% endif %}
</div><!-- col-md-6-->
<div class="col-md-6">
<table class="table">
  <tr>
    <th>Accepted formula</th>
    <td>
    {% if image_data.accepted_formula_id is null %}
    None so far
    {% else %}
    <a href="../symbol/?id={{ image_data.accepted_formula_id }}">{% if image_data.accepted_formula_id_best_rendering != '' %}<img
              src="../formulas/{{ image_data.accepted_formula_id }}-{{ image_data.accepted_formula_id_best_rendering }}.svg"
                 width="150" style="width:50px;max-height:50px;" alt="formula rendering" />{% endif %} ({{ image_data.accepted_formula_id }})</a>
        {% if image_data.user_id == uid or uid == 10 %}
            <a href="?raw_data_id={{ raw_data_id }}&amp;unaccept={{ raw_data_id }}" class="btn btn-warning" accesskey="u">unaccept</a>
        {% endif %}
    {% endif %}
    </td>
  </tr>
  <tr>
    <th>nr of symbols</th>
  {% if image_data.user_id == uid or uid == 10 %}
    <td>
<form class="form-inline" role="form" method="post">
  <input type="hidden" name="raw_id_lines" value="{{ raw_data_id }}" />
  <div class="form-group">
    <input type="number"
           min="1"
           step="1"
           class="form-control"
           id="nr_of_lines" name="nr_of_lines"
           placeholder="1"
           value="{{ image_data.nr_of_symbols }}"
           onchange="this.form.submit()"/>
  </div>
</form></td>
  {% else %}
    <td>{{ image_data.nr_of_symbols }}</td>
  {% endif %}
  </tr>
  <tr>
    <th>segmentation</th>
  {% if image_data.user_id == uid or uid == 10 %}
    <td>
<form class="form-inline" role="form" method="post">
  <input type="hidden" name="raw_id_segmentation" value="{{ raw_data_id }}" />
  <div class="form-group">
    <input type="text"
           id="segmentation" name="segmentation"
           class="form-control"
           value="{{ image_data.segmentation|json_encode() }}" />
  </div>
  <button type="submit" class="btn btn-default">update</button>
</form></td>
  {% else %}
    <td>{{ image_data.segmentation|json_encode() }}</td>
  {% endif %}
  </tr>
  {% if image_data.user_id == uid or uid == 10 %}
  <tr>
    <th>is stroke segmentable</th>
    <td>
        <form class="form-inline" role="form" method="post">
          <input type="hidden" name="raw_id_stroke_segmentable" value="{{ raw_data_id }}" />
          <div class="checkbox">
            <label>
            {% if image_data.stroke_segmentable %}
              <input type="checkbox" id="stroke_segmentable" name="stroke_segmentable" onchange="this.form.submit()" checked/>
            {% else %}
              <input type="checkbox" id="stroke_segmentable" name="stroke_segmentable" onchange="this.form.submit()"/>
            {% endif %}
            </label>
          </div>
        </form></td>
  </tr>
  {% endif %}
  <tr>
    <th>User</th>
    <td><a href="../user/?id={{ image_data.user_id }}">{{ image_data.display_name }}</a></td>
  </tr>
  <tr>
    <th>Analyze</th>
    <td><a href="../render/?raw_data_id={{ raw_data_id }}">Preprocessing</a></td>
  </tr>
  <tr>
    <td>Number of <abbr title="Points that appeared by hardware mistakes and which are not connected to any line">wild points</abbr></td>
    <td>
        <form class="form-inline" role="form" method="post">
            <input type="hidden"
                   id="raw_data_id"
                   name="raw_data_id"
                   value="{{ raw_data_id }}" />
            <input type="number"
                   step="1"
                   min="0"
                   id="wild_point_count"
                   name="wild_point_count"
                   value="{{ image_data.wild_point_count }}"
                   accesskey="w"
                   onchange="this.form.submit()" />
        </form>
        <a href="?raw_data_id={{ raw_data_id }}&action=annotate_wp" class="btn btn-default" id="partialAnswer{{ d.id }}">annotate</button>
    </td>
  </tr>
</table>
</div><!--col-md-6-->
</div><!--row-->

<a id="answers"></a>
{% if (automatic_answers|length > 0) and (uid == 10) %}
<div class="page-header">
    <div class="btn-toolbar pull-right">
    <a href="?raw_data_id={{raw_data_id}}&amp;delete_automatic_classification={{raw_data_id}}" class="btn btn-danger"><span class="glyphicon glyphicon-remove" aria-hidden="true"></span> Delete</a>
    </div>
    <h2>Automatic Classifications</h2>
</div>
{% elseif (automatic_answers|length > 0) %}
<h2>Automatic Classifications</h2>
{% endif %}

{% if automatic_answers|length > 0 %}
    {% for answer in automatic_answers %}
    <div class="pull-left" style="height:200px;">
      <table>
        <tr>
          <td>
            <a href="../symbol/?id={{ answer.formula_id }}"><img
              src="../formulas/{{ answer.formula_id }}-{{ answer.best_rendering }}.svg"
                 width="150" style="width:150px;max-height:150px;" alt="formula rendering" /></a>
          </td>
          <td style="width:135px;">
              <pre class="prettyprint linenums languague-css">{{ answer.formula_in_latex }}</pre><br/>
              <p>Mode: {{answer.mode}}</p>
              {% if answer.package != '' %}
              <p>Package: {{answer.package}}</p>
              {% endif %}
              <p><a href="../worker?id={{ answer.worker_id }}">{{ answer.worker_name }}</a></p>
              <p>Probability: {{ answer.probability }}%</p>
          </td>
          <td>
            {% if answer.formula_id == image_data.accepted_formula_id %}
              <a href="?raw_data_id={{ raw_data_id }}&amp;unaccept={{ answer.formula_id }}"><img src="../icons/Crystal_Clear_action_apply.png" alt="Accepted" /></a>
            {% else %}
          <a href="?raw_data_id={{ raw_data_id }}&amp;accept={{ answer.formula_id }}"><img src="../icons/Crystal_Clear_action_apply-gray.png" alt="Accept" onmouseover=
"src='../icons/Crystal_Clear_action_apply.png'" onmouseout="src='../icons/Crystal_Clear_action_apply-gray.png'" /></a>
            {% endif %}
          </td>
        </tr>
      </table>
    </div>
    {% endfor %}
    <br style="clear:both;" />
{% endif %}

{% if partial_answers|length > 0 %}
   <h2>User contributed answers</h2>
   <table class="table" id="user_contrib_answers">
       <thead>
            <tr>
                <th>&nbsp;</th>
                <th>Symbol</th>
                <th>Stroke Number(s)<br/>and Author</th>
                <th>Image (the classified part is red)</th>
            </tr>
       </thead>
       <tbody>
        {% for d in partial_answers %}
            <tr>
                <td><a href="?raw_data_id={{ raw_data_id }}&amp;delete_partial_answer={{ d.id }}" class="btn btn-danger"><span class="glyphicon glyphicon-remove" aria-hidden="true"></span></a>
                    <button onclick="{% if d.is_accepted %}unacceptPartialAnswerView({{ raw_data_id }}, {{ d.id }}){% else %}acceptPartialAnswerView({{ raw_data_id }}, {{ d.id }}){% endif %}" class="btn {% if d.is_accepted %}btn-success{% else %}btn-default{% endif %}" id="partialAnswer{{ d.id }}"><span class="glyphicon glyphicon-ok" aria-hidden="true"></span></button></td>
                <td>{% if d.best_rendering != '' %}<img
              src="../formulas/{{ d.symbol_id }}-{{ d.best_rendering }}.svg"
                 width="150" style="width:50px;max-height:50px;" alt="formula rendering" />{% endif %}<a href="../symbol/?id={{ d.symbol_id }}"><code>{{ d.formula_in_latex }}</code></a></td>
                <td>{{ d.strokes }}<br/><a href="../user/?id={{ d.user_id }}">{{ d.display_name }}</a></td>
                <td><object data="../raw-data/{{ raw_data_id }}.svg"
            type="image/svg+xml"
            id="rawdatavis_{{ loop.index }}"
            data-strokes="{{ d.strokes }}"
            style="width:400px;height:50px;border:1px solid black;"
    ></object></td>
            </tr>
        {% endfor %}
       </tbody>
   </table>
{% endif %}

    <h2>Add answer</h2>
    <form method="post" action="?raw_data_id={{ raw_data_id }}" role="form">

<!--     <object data="../raw-data/{{ raw_data_id }}.svg{{ force_reload }}"
            type="image/svg+xml"
            id="canvas_strokes_answer"
            style="width:400px;height:400px;border:1px solid black;"
    ></object> -->

    <div class="form-group">
        <label for="strokes">Strokes you want to classify</label>
        <input type="text" class="form-control" id="strokes" name="strokes" placeholder="0,1,3,5" autocomplete="off" value="{% for i in 0..total_strokes-1 %}{{ i }}{%if i<total_strokes-1%}, {%endif%}{% endfor %}" oninput="get_classification()"/>
    </div>

    <div id="classification-results"></div>

    <div class="form-group">
        <label class="control-label" for="latex_partial">LaTeX</label>
        <textarea name="latex_partial" id="latex_partial" class="form-control" rows="3"></textarea>
       <p class="help-block">Please add only the code you would add in the
       document body. All packages / mathmode information will be added
       automatically.</p>
    </div>

    <button type="submit" class="btn btn-success">Submit</button>
    </form>

</div><!--tabpanel home-->

<div role="tabpanel" class="tab-pane" id="information">
    <table class="table table-striped">
        <tr>
            <th>strokes</th>
            <td>{{ total_strokes }}</td>
        </tr>
        <tr>
            <th>points</th>
            <td>{{ points_nr }}</td>
        </tr>
        <tr>
        <th>control points</th>
        <td>{{ control_points }}</td>
        </tr>
        <tr>
        <th>Bounding box (w &times; h)</th>
        <td>{{ bounding_box.width }} &times; {{ bounding_box.height }}</td>
        </tr>
        <tr>
        <th>Min. Time Delta</th>
        <td>{% if time_resolution.min_time_resolution == -1 %}-{% else %}{{ '%02.2f'|format(time_resolution.min_time_resolution) }} ms{% endif %}</td>
        </tr>
        <tr>
        <th>Avg. Time Delta</th>
        <td>{% if time_resolution.average_time_resolution == -1 %}-{% else %}{{ '%02.2f'|format(time_resolution.average_time_resolution) }} ms{% endif %}</td>
        </tr>
        <tr>
        <th>Max. Time Delta</th>
        <td>{% if time_resolution.max_time_resolution == -1 %}-{% else %}{{ '%02.2f'|format(time_resolution.max_time_resolution) }} ms{% endif %}</td>
        </tr>
        <tr>
        <th>Creation Date</th>
        <td>{{ image_data.creation_date }}</td>
        </tr>
    </table>
</div>

<div role="tabpanel" class="tab-pane" id="operations_pane">
    <table class="table">
  {% if image_data.user_id == uid or uid == 10 %}
  <tr>
    <th rowspan="7">Operations</th>
    <td>
        <div class="btn-group" role="group" aria-label="...">
        <a href="?delete={{ raw_data_id }}" class="btn btn-danger">Delete</a>
        {% if uid == 10 %}
        <a href="?raw_data_id={{ raw_data_id }}&amp;rerender={{ raw_data_id }}" class="btn btn-danger">rerender</a>
        <a href="?raw_data_id={{ raw_data_id }}&amp;fix={{ raw_data_id }}" class="btn btn-danger">fix it</a>
        {% endif %}
        </div>
    </td>
  </tr>
  <tr>
    <td>
    <div class="btn-group" role="group" aria-label="...">
    {% if image_data.accepted_formula_id == 1 %}
        <a href="?raw_data_id={{ raw_data_id }}&amp;trash={{ raw_data_id }}" class="btn btn-warning" disabled="true"><span class="glyphicon glyphicon-trash" aria-hidden="true"></span> Drawing is trash</a>
    {% else %}
        <a href="?raw_data_id={{ raw_data_id }}&amp;trash={{ raw_data_id }}" class="btn btn-warning"><span class="glyphicon glyphicon-trash" aria-hidden="true"></span> Drawing is trash</a>
    {% endif %}
    {% if image_data.classifiable == 0 %}
        <a href="?raw_data_id={{ raw_data_id }}&amp;unclassifiable={{ raw_data_id }}" class="btn btn-warning" disabled="true">not classifiable</a>
    {% else %}
        <a href="?raw_data_id={{ raw_data_id }}&amp;unclassifiable={{ raw_data_id }}" class="btn btn-warning">not classifiable</a>
    {% endif %}
    </div>
    </td>
  </tr>
  <tr>
    <td>
    {% if image_data.missing_line == 1 %}
        <a href="?raw_data_id={{ raw_data_id }}&amp;missing_line={{ raw_data_id }}" class="btn btn-warning" disabled="true">One line is missing, but the end dot is visible</a>
    {% else %}
        <a href="?raw_data_id={{ raw_data_id }}&amp;missing_line={{ raw_data_id }}" class="btn btn-warning" accesskey="m">One line is missing, but the end dot is visible</a>
    {% endif %}
    </td>
  </tr>
  <tr>
    <td>
    <div class="btn-group" role="group" aria-label="...">
    {% if image_data.has_hook == 1 %}
        <a href="?raw_data_id={{ raw_data_id }}&amp;has_hook={{ raw_data_id }}" class="btn btn-warning" disabled="true">Has hook</a>
    {% else %}
        <a href="?raw_data_id={{ raw_data_id }}&amp;has_hook={{ raw_data_id }}" class="btn btn-warning">Has hook</a>
    {% endif %}
    {% if image_data.has_too_long_line == 1 %}
        <a href="?raw_data_id={{ raw_data_id }}&amp;has_too_long_line={{ raw_data_id }}" class="btn btn-warning" disabled="true">Has much too long line</a>
    {% else %}
        <a href="?raw_data_id={{ raw_data_id }}&amp;has_too_long_line={{ raw_data_id }}" class="btn btn-warning">Has much too long line</a>
    {% endif %}
    </div>
    </td>
  </tr>
  <tr>
    <td>
    {% if image_data.no_geometry == 1 %}
        <a href="?raw_data_id={{ raw_data_id }}&amp;no_geometry={{ raw_data_id }}" class="btn btn-warning" disabled="true">No Geometry</a>
    {% else %}
        <a href="?raw_data_id={{ raw_data_id }}&amp;no_geometry={{ raw_data_id }}" class="btn btn-warning">No Geometry</a>
    {% endif %}
    </td>
  </tr>
  <tr>
    <td>
    {% if image_data.is_image == 1 %}
        <a href="?raw_data_id={{ raw_data_id }}&amp;is_image={{ raw_data_id }}" class="btn btn-warning" disabled="true"><span class="glyphicon glyphicon-tree-deciduous" aria-hidden="true"></span> This is an image, not a formula</a>
    {% else %}
        <a href="?raw_data_id={{ raw_data_id }}&amp;is_image={{ raw_data_id }}" class="btn btn-warning"><span class="glyphicon glyphicon-tree-deciduous" aria-hidden="true"></span> This is an image, not a formula</a>
    {% endif %}
    </td>
  </tr>
  <tr>
    <td>
    {% if image_data.is_in_testset == 1 %}
        <a href="?raw_data_id={{ raw_data_id }}&amp;remove_from_testset={{ raw_data_id }}" class="btn btn-primary">Remove from testset</a>
    {% else %}
        <a href="?raw_data_id={{ raw_data_id }}&amp;add_to_testset={{ raw_data_id }}" class="btn btn-primary">Add to testset</a>
    {% endif %}
    </td>
  </tr>
  {% elseif logged_in and account_type != 'IP-User' %}
  <tr>
    <th>Operations</th>
    <td><a href="?flag={{ raw_data_id }}" class="btn btn-danger">Flag</a></td>
  </tr>
  {% endif %}
    </table>

</div> <!-- tabpanel-->
</div> <!-- tab-content-->
</div> <!-- tabpanel-->


<!-- MathJax -->
<script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML"></script>
<script type="text/javascript">
<!--
MathJax.Hub.Config({
  jax: ["input/TeX", "output/HTML-CSS"],
  tex2jax: {
    inlineMath: [['$','$'], ['\\(','\\)']],
    displayMath: [ ['$$', '$$']],
    skipTags: ['script', 'noscript', 'style', 'textarea', 'pre', 'code'],
    processEscapes: true
  }
});

MathJax.Hub.Queue(function() {
    var all = MathJax.Hub.getAllJax(), i;
    for(i=0; i < all.length; i += 1) {
        all[i].SourceElement().parentNode.className += ' has-jax';
    }
});
// -->
</script>
    <script>
        var recording_id = {{ raw_data_id }};
        var startX = 0;
        var startY = 0;
        var endX = 0;
        var endY = 0;
        var redraw = false;
        var lastClick = new Date().getTime();

        var segmentation = {{ image_data.segmentation|json_encode() }};

        var canvas = document.getElementById("canvas");
        //it's important to add an load event listener to the object, as it will load the svg doc asynchronously
        canvas.addEventListener("load", function(){
            var svgDoc = canvas.contentDocument; //get the inner DOM of .svg
            svgDoc.addEventListener('mouseup', mouseUpEventHandler);
            svgDoc.addEventListener('mousemove', mouseMoveEventHandler);
            svgDoc.addEventListener('mousedown', mouseDownHandler);

            // add rectangleSelection
            var svgns = "http://www.w3.org/2000/svg";
            var rect = document.createElementNS(svgns, 'rect');
            rect.setAttributeNS(null, 'id', 'rectangleSelection');
            rect.setAttributeNS(null, 'x', startX);
            rect.setAttributeNS(null, 'y', startY);
            rect.setAttributeNS(null, 'height', Math.abs(startX-endX));
            rect.setAttributeNS(null, 'width', Math.abs(startY-endY));
            rect.setAttributeNS(null, 'fill', '#0000ff');
            rect.setAttributeNS(null, 'opacity', 0.4);
            svgDoc.firstChild.appendChild(rect);

            colorBySegmentation();
        }, false);

        var last_strokes = null;

        function arraysEqual(a, b) {
            if (a === b) return true;
            if (a == null || b == null) return false;
            if (a.length != b.length) return false;

            // If you don't care about the order of the elements inside
            // the array, you should sort both arrays here.

            for (var i = 0; i < a.length; ++i) {
                if (a[i] !== b[i]) return false;
            }
            return true;
        }

        function get_classification () {
            var stroke_numbers = document.getElementById('strokes').value.split(',');
            var stroke_numbers_new = [];
            for(var i=0; i<stroke_numbers.length; i++) {
                var integer = parseInt(stroke_numbers[i], 10);
                if (!isNaN(integer)) {
                    stroke_numbers_new.push(integer);
                };
            }
            stroke_numbers = stroke_numbers_new;

            if (!arraysEqual(last_strokes, stroke_numbers)) {
                var lines = [];
                var data = {{image_data.data|raw}};
                var raw_data_id = {{ raw_data_id }};
                for (var i=0; i < stroke_numbers.length; i++) {
                    lines.push(data[stroke_numbers[i]]);
                }

                console.log(lines);

                    $.ajax({
                      type: "POST",
                      url: "http://i13pc106.ira.uka.de/~mthoma/cgi-bin/test.php",
                      data: {'classify': JSON.stringify(lines)},
                      success: function(data)
                        {
                             var content = "<table class='table' role='table' name='resulttable' id='resulttable'>";
                             content += "<thead><tr><th>&alpha;</th><th>Classification results for given strokes</th><th>%</th><th>submit</th></tr></thead><tbody>";
                             $.each(data, function( index, value ) {
                                 $.each(value,
                                        function(symbolbla, probability) {
                                            var arr = symbolbla.split(";");
                                            var system_id = arr[0];
                                            var latex = arr[1];
                                            var unicode_code_point = arr[2];
                                            var font = arr[3];
                                            var font_style = arr[4];
                                            content += "<tr><td><a href='../symbol/?id="+system_id+"' style='font-family:"+font+";font-style:"+font_style+"'>&#" + unicode_code_point + ";</a></td><td><input id=\"inptxt"+system_id+"\" class=\"form-control\" value='"+ latex + "' disabled/></td><td style='text-align:right'>" + parseFloat(probability*100).toFixed(2) + "</td><td><div class='btn-group' role='group' aria-label='accept'><button type='button' id='button"+system_id+"' class='btn btn-default' aria-label='Left Align' onclick=\"insertPartialAnswer({{ raw_data_id }},'"+latex.replace('\\','\\\\')+"', '"+stroke_numbers.join(',')+"', "+system_id+")\" data-clipboard-text='"+ latex + "'><span class='glyphicon glyphicon-ok' aria-hidden='true'></span></button></div></td></tr>";
                                        })
                             });
                             content += "</tbody></table>";
                             document.getElementById('classification-results').innerHTML = content;



                        },
                      dataType: "json",
                      error: function(e) {
                        console.log(e);
                      }
                    });
            }
            last_strokes = stroke_numbers;
            };
    </script>
{% endblock %}

{% block footer %}
<script src="https://ajax.googleapis.com/ajax/libs/jqueryui/1.11.4/jquery-ui.min.js"></script>
<script src=""></script>
<script>
    //var json = require('../cache-data/phraselist.js'); //with path
    var phraselist = (function () {
        var json = null;
        $.ajax({
            'async': false,
            'global': false,
            'url': '../cache-data/phraselist.js',
            'dataType': "json",
            'success': function (data) {
                json = data;
            }
        });
        return json;
    })(); 
    phraselist.sort();
    console.log(phraselist);
    function escapeRegExp(str) {
      return str.replace(/[\-\[\]\/\{\}\(\)\*\+\?\.\\\^\$\|]/g, "\\$&");
}
      $(document).ready(function() {
          monkeyPatchAutocomplete();

          $("#latex_partial").autocomplete({
              // The source option can be an array of terms.  In this case, if
              // the typed characters appear in any position in a term, then the
              // term is included in the autocomplete list.
              // The source option can also be a function that performs the search,
              // and calls a response function with the matched entries.
              source: function(req, responseFn) {
                  addMessage("search on: '" + req.term + "'<br/>");
                  var re = $.ui.autocomplete.escapeRegex(req.term);
                  var matcher = new RegExp("" + re, "i" );
                  var a = $.grep( phraselist, function(item,index){
                      //addMessage("&nbsp;&nbsp;sniffing: '" + item + "'<br/>");
                      return matcher.test(escapeRegExp(item));
                  });
                  addMessage("Result: " + a.length + " items<br/>");
                  responseFn( a );
              },

              select: function(value, data){
                  var s = ""
                  if (typeof data == "undefined") {
                    s = value;
                  }else {
                    s = data.item.value;
                  }
                  if (s.length > 30) { s = s.substring(0,30) + "..."; }
                  addMessage('You selected: ' + s + "<br/>");
              }
          });
      });

      // This patches the autocomplete render so that
      // matching items have the match portion highlighted.
      function monkeyPatchAutocomplete() {

          // Don't really need to save the old fn,
          // but I could chain if I wanted to
          var oldFn = $.ui.autocomplete.prototype._renderItem;

          $.ui.autocomplete.prototype._renderItem = function( ul, item) {
              var re = new RegExp("" + this.term, "i") ;
              var t = item.label.replace(re,"<span style='font-weight:bold;color:Blue;'>" + this.term + "</span>");
              return $( "<li></li>" )
                  .data( "item.autocomplete", item )
                  .append( "<a>" + t + "</a>" )
                  .appendTo( ul );
          };
      }

    function addMessage(msg){
        $('#msgs').append(msg+"<br/>");
    }


{% for d in partial_answers %}
    var rawdataobj{{loop.index}} = document.getElementById('rawdatavis_{{loop.index}}');
    rawdataobj{{loop.index}}.addEventListener("load",function(){
        visualizeSymbolStrokes(document.getElementById('rawdatavis_{{loop.index}}'));
    });
{% endfor %}

function acceptPartialAnswerView(raw_data_id, formula_id) {
    acceptPartialAnswer(raw_data_id, formula_id, function(){
        var button = document.getElementById("partialAnswer"+formula_id);
        button.className = "btn btn-success";
        button.onclick = function() {unacceptPartialAnswerView(raw_data_id, formula_id);};
    });

}

function unacceptPartialAnswerView(raw_data_id, formula_id) {
    unacceptPartialAnswer(raw_data_id, formula_id,  function(){
        var button = document.getElementById("partialAnswer"+formula_id);
        button.className = "btn btn-default";
        button.onclick = function() {acceptPartialAnswerView(raw_data_id, formula_id);};
    });
}

function insertPartialAnswer(raw_data_id, latex, strokes, button_id) {
    submitPartial(raw_data_id, latex, strokes, function() {
        var button = document.getElementById("button"+button_id);
        button.className = "btn btn-success";
        button.onclick = function(){};
/*        var table = document.getElementById("user_contrib_answers");
        var row = table.insertRow(-1);
        var cell1 = row.insertCell(0);
        row.innerHTML = '<td><a href="?raw_data_id='+raw_data_id+'&amp;delete_partial_answer=" class="btn btn-danger"><span class="glyphicon glyphicon-remove" aria-hidden="true"></span></a>
                    <button onclick="acceptPartialAnswerView(211498, 48)" class="btn btn-default" id="partialAnswer48"><span class="glyphicon glyphicon-ok" aria-hidden="true"></span></button></td>
                <td><a href="../symbol/?id=74">4</a></td>
                <td>3,4</td>
                <td><object data="../raw-data/211498.svg" type="image/svg+xml" id="rawdatavis_4" data-strokes="3,4" style="width:400px;height:50px;border:1px solid black;"></object></td>
            ';*/
/*        var delete_button = document.createElement("button");
        delete_button.className = "btn btn-danger";
        cell1.appendChild(delete_button);
        var cell2 = row.insertCell(2);
        var cell3 = row.insertCell(3);
        cell3.innerHTML = strokes;
        var cell4 = row.insertCell(4);
        cell4.innerHTML = '<object data="../raw-data/'+raw_data_id+'.svg" type="image/svg+xml" id="rawdatavis_2" data-strokes="'+raw_data_id+'" style="width:400px;height:50px;border:1px solid black;"></object>';*/
    });
}
</script>
{% endblock %}